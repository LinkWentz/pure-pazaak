.Tutorial {
    display: flex;
    justify-content: center;
    align-items: center;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
}

.Tutorial .mainMenu {
    pointer-events: all;
}

.Tutorial .yourSidedeck .sidedeckGrid .Card{
    pointer-events: none;
}

.TutorialMessageBubble {
    display: flex;
    flex-direction: column;
    justify-content: cemter;
    align-items: center;
    position: absolute;
    z-index: 100;
    top: auto;
    left: auto;
    overflow: hidden;
    width: auto;
    min-width: min-content;
    width: 70%;
    max-width: 800px;
    height: auto;
    padding: 1rem;
    background-color: var(--gameBackground);
    border: var(--borders) var(--borderThickness) solid;
    border-radius: var(--borderRadius);
    pointer-events: all;
}

.TutorialMessageBubble p {
    font-size: 1.2rem;
    line-height: 2rem;
    text-align: center;
}

.TutorialMessageBubble .Button {
    height: 45px;
    width: 150px;
    font-size: 1.2rem;
}

@media screen and (max-aspect-ratio: 14/15) {
    .TutorialMessageBubble {
        max-width: 100%;
        width: 100%;
    }   
}

.highlightEndTurn .endTurn {
    box-shadow: inset 0px 0px 20px var(--text),
                0px 0px 20px var(--text);
    background-color: var(--buttonHover);
    z-index: 100;
    pointer-events: all;
}

.highlightEndTurn .endTurn:hover {
    background-color: var(--buttonHover);
    border-color: var(--buttonHoverBorder);
    color: var(--buttonHoverText);
    box-shadow: inset 0 0 1rem var(--buttonHoverBorder),
                0 0 0.5rem 0.1rem var(--buttonHoverBorder);
}

.highlightEndTurn .endTurn:active {
    background-color: var(--buttonActive);
    border-color: var(--buttonActiveBorder);
    color: var(--buttonActiveText);
    box-shadow: inset 0 0 1rem var(--buttonActiveBorder),
                0 0 0.5rem 0.1rem var(--buttonActiveBorder);
}

.highlightEndTurn .stand, .highlightEndTurn .yourSidedeck .sidedeckGrid .Card{
    pointer-events: none;
}

.highlightStand .stand{
    box-shadow: inset 0px 0px 20px var(--text),
                0px 0px 20px var(--text);
    background-color: var(--buttonHover);
    z-index: 100;
    pointer-events: all;
}

.highlightStand .stand:hover {
    background-color: var(--buttonHover);
    border-color: var(--buttonHoverBorder);
    color: var(--buttonHoverText);
    box-shadow: inset 0 0 1rem var(--buttonHoverBorder),
                0 0 0.5rem 0.1rem var(--buttonHoverBorder);
}

.highlightStand .stand:active {
    background-color: var(--buttonActive);
    border-color: var(--buttonActiveBorder);
    color: var(--buttonActiveText);
    box-shadow: inset 0 0 1rem var(--buttonActiveBorder),
                0 0 0.5rem 0.1rem var(--buttonActiveBorder);
}


.highlightStand .endTurn, .highlightStand .yourSidedeck .sidedeckGrid .Card{
    pointer-events: none;
}

.highlight1stCard .yourSidedeck .sidedeckGrid .Card:first-child svg {
    filter: drop-shadow(0 0 10px var(--text));
}

.highlight1stCard .yourSidedeck .sidedeckGrid .Card:first-child {
    pointer-events: all;
}

.highlight1stCard .yourSidedeck .sidedeckGrid .Card, .highlight1stCard .endTurn, .highlight1stCard .stand {
    pointer-events: none;
}

.highlightMainMenu .mainMenu{
    box-shadow: inset 0px 0px 20px var(--text),
                0px 0px 20px var(--text);
    background-color: var(--buttonHover);
    z-index: 100;
    pointer-events: all;
}

.highlightMainMenu .mainMenu:hover {
    background-color: var(--buttonHover);
    border-color: var(--buttonHoverBorder);
    color: var(--buttonHoverText);
    box-shadow: inset 0 0 1rem var(--buttonHoverBorder),
                0 0 0.5rem 0.1rem var(--buttonHoverBorder);
}

.highlightMainMenu .mainMenu:active {
    background-color: var(--buttonActive);
    border-color: var(--buttonActiveBorder);
    color: var(--buttonActiveText);
    box-shadow: inset 0 0 1rem var(--buttonActiveBorder),
                0 0 0.5rem 0.1rem var(--buttonActiveBorder);
}


.highlightMainMenu .endTurn, .highlightMainMenu .stand, .highlightMainMenu .yourSidedeck .sidedeckGrid .Card{
    pointer-events: none;
}